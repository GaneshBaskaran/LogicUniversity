@using LogicUniversity.Models

@{
    var reqList = (List<Requisition>)ViewData["reqList"];
    var count = (int)ViewData["count"];
    var CPList = (List<CollectionPoint>)ViewData["CPList"];
}

@{
    ViewBag.Title = "Viewallrequisitions";
}
@{
    Layout = "~/Views/Shared/_Layout_SC.cshtml";
}

<head>
    <style>
        table, th, td {
            border: 1px solid black;
            text-align: center;
        }
    </style>
</head>

<h2>Viewallrequisitions</h2>

@using (Html.BeginForm())
{
    int j = 0;
    <table>
        <tr>
            <td>From date: </td>
            <td><input type="text" name="fromdate" id="fromdate" /></td>
            <td>Collection Point: </td>
            <td><select name="SelectedCP">
                    @foreach (CollectionPoint cp in CPList)
                    {
                        <option Id="CollectionPoint[@j]" name="CollectionPoint[@j]" value="@cp.CollectionPointId" typeof="text">
                            @cp.LocationName
                        </option>
                    }
                </select></td>
        </tr>
        <tr>
            <td>To date: </td>
            <td><input type="text" name="todate" id="todate" /></td>
            <td>Status: </td>
            <td><input type="text" name="status" id="status" /></td>
        </tr>
        <tr>

            <td><input type="submit" value="search" name="search" id="search" /></td>
            <td><input type="submit" value="retrieve" name="retrieve" id="retrieve" /></td>
        </tr>
    </table>
    <input type="hidden" value=@count name="count" id="count" />

    <table>

        <tr>
            <td></td>
            <td>Date </td>
            <td>Status </td>
            <td>Department </td>
        </tr>
        @{
            //To make unique Id
            int i = 0;
            foreach (var item in reqList)
            {

                <tr>
                    <td>
                        <input type="checkbox" name="Requisition[@i].toretrieve" id="Requisition[@i].toretrieve" value=@Html.DisplayFor(model => item.Department) />
                    </td>
                    <td>@Html.DisplayFor(model => item.Date)</td>
                    <td>@Html.DisplayFor(model => item.Status)</td>
                    <td>@Html.DisplayFor(model => item.Department)</td>
                </tr>
                i++;
            }
        }
        @*
                <tr>
                <td>Requisition Id </td>
                <td>Employee Id </td>
                <td>Date </td>
                <td>Status </td>
                <td>Remarkss </td>
                <td>Approver Id </td>
                <td>Department </td>
            </tr>
            @foreach (var requisition in reqList)
            {
                <tr>
                    <td>@Html.DisplayFor(model => requisition.RequisitionId)</td>
                    <td>@Html.DisplayFor(model => requisition.EmployeeId)</td>
                    <td>@Html.DisplayFor(model => requisition.Date)</td>
                    <td>@Html.DisplayFor(model => requisition.Status)</td>
                    <td>@Html.DisplayFor(model => requisition.Remarks)</td>
                    <td>@Html.DisplayFor(model => requisition.ApproverId)</td>
                    <td>@Html.DisplayFor(model => requisition.Department)</td>
                </tr>
            }
        *@
    </table>
}
